# Cloud Run Deployment Configuration
# This file contains configuration for deploying to Google Cloud Run

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: pathfinder-api
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/launch-stage: GA
spec:
  template:
    metadata:
      annotations:
        # Resource allocation
        run.googleapis.com/cpu: "2"
        run.googleapis.com/memory: "2Gi"
        run.googleapis.com/max-instances: "100"
        run.googleapis.com/min-instances: "1"
        
        # Concurrency
        run.googleapis.com/execution-environment: gen2
        autoscaling.knative.dev/maxScale: "100"
        autoscaling.knative.dev/minScale: "1"
        
        # Service account
        run.googleapis.com/service-account: pathfinder-sa@pathfinder-app.iam.gserviceaccount.com
        
        # VPC (optional)
        # run.googleapis.com/vpc-access-connector: pathfinder-connector
        # run.googleapis.com/vpc-access-egress: all-traffic
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      containers:
      - image: asia-south1-docker.pkg.dev/pathfinder-app/pathfinder-repo/api:latest
        ports:
        - name: http1
          containerPort: 8080
        env:
        # Basic configuration
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: HOST
          value: "0.0.0.0"
        
        # Google Cloud configuration
        - name: GOOGLE_CLOUD_PROJECT_ID
          value: "pathfinder-app"
        
        # Firebase configuration
        - name: FIREBASE_PROJECT_ID
          value: "pathfinder-app"
        
        # Secrets from Secret Manager
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: latest
              name: jwt-secret
        - name: GOOGLE_MAPS_API_KEY
          valueFrom:
            secretKeyRef:
              key: latest
              name: google-maps-api-key
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              key: latest
              name: session-secret
        
        # Resource limits
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
  
  traffic:
  - percent: 100
    latestRevision: true