rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             request.auth.token.admin == true;
    }
    
    function isValidUser() {
      return isAuthenticated() && 
             request.auth.uid != null &&
             request.auth.token.email_verified == true;
    }
    
    function isValidPathData() {
      return request.resource.data.keys().hasAll(['start', 'end', 'algorithm']) &&
             request.resource.data.start is map &&
             request.resource.data.end is map &&
             request.resource.data.start.keys().hasAll(['lat', 'lng']) &&
             request.resource.data.end.keys().hasAll(['lat', 'lng']) &&
             request.resource.data.start.lat is number &&
             request.resource.data.start.lng is number &&
             request.resource.data.end.lat is number &&
             request.resource.data.end.lng is number &&
             request.resource.data.algorithm in ['astar', 'dijkstra', 'bfs'];
    }
    
    // User profiles
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin();
      
      // User creation rules
      allow create: if isAuthenticated() &&
                   request.auth.uid == userId &&
                   request.resource.data.keys().hasAll(['email', 'createdAt']) &&
                   request.resource.data.email == request.auth.token.email &&
                   request.resource.data.createdAt == request.time;
    }
    
    // Path calculations
    match /paths/{pathId} {
      // Anyone can read public paths
      allow read: if resource.data.isPublic == true;
      
      // Users can read their own paths
      allow read: if isOwner(resource.data.userId);
      
      // Admins can read all paths
      allow read: if isAdmin();
      
      // Users can create paths with valid data
      allow create: if isValidUser() &&
                   isValidPathData() &&
                   request.resource.data.userId == request.auth.uid &&
                   request.resource.data.createdAt == request.time;
      
      // Users can update their own paths
      allow update: if isOwner(resource.data.userId) &&
                   request.resource.data.userId == resource.data.userId;
      
      // Users can delete their own paths
      allow delete: if isOwner(resource.data.userId);
      
      // Admins can do everything
      allow write: if isAdmin();
    }
    
    // Path history (read-only for users)
    match /pathHistory/{historyId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isValidUser() &&
                   request.resource.data.userId == request.auth.uid &&
                   request.resource.data.createdAt == request.time;
    }
    
    // User analytics (append-only)
    match /analytics/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      
      match /events/{eventId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId) &&
                     request.resource.data.timestamp == request.time;
      }
    }
    
    // API usage tracking
    match /usage/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // System collections (admin only)
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }
    
    match /system/{document=**} {
      allow read, write: if isAdmin();
    }
    
    match /config/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Public data (read-only)
    match /public/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Algorithm performance data
    match /performance/{algorithmId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
      
      match /metrics/{metricId} {
        allow read: if isAuthenticated();
        allow create: if isValidUser();
      }
    }
    
    // Rate limiting data
    match /rateLimits/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isAdmin();
    }
    
    // Feedback and reports
    match /feedback/{feedbackId} {
      allow create: if isValidUser() &&
                   request.resource.data.userId == request.auth.uid &&
                   request.resource.data.createdAt == request.time;
      allow read: if isAdmin();
    }
    
    // Error logs (system use only)
    match /errors/{errorId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
    }
    
    // Default deny rule for unlisted collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}