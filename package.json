{
  "name": "pathfinder",
  "version": "0.1.0",
  "description": "A comprehensive path-finding and navigation solution for efficient route planning and optimization",
  "main": "src/index.js",
  "scripts": {
    "start": "node src/index.js",
    "dev": "nodemon src/index.js",
    "build": "npm run clean && npm run build:server && npm run build:client",
    "build:server": "babel src -d dist --ignore src/client",
    "build:client": "webpack --mode production",
    "clean": "rimraf dist",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:firestore-rules": "firebase emulators:exec --only firestore 'jest test/firestore-rules.test.js'",
    "lint": "eslint src/ test/",
    "lint:fix": "eslint src/ test/ --fix",
    "format": "prettier --write src/ test/",
    "type-check": "tsc --noEmit",
    "docker:build": "docker build -t pathfinder .",
    "docker:run": "docker run -p 3000:3000 pathfinder",
    "docker:test": "docker run --rm pathfinder npm test",
    "deploy": "npm run build && firebase deploy",
    "deploy:functions": "firebase deploy --only functions",
    "deploy:hosting": "firebase deploy --only hosting",
    "deploy:firestore": "firebase deploy --only firestore:rules",
    "emulators": "firebase emulators:start",
    "db:migrate": "knex migrate:latest",
    "db:seed": "knex seed:run",
    "db:reset": "knex migrate:rollback && knex migrate:latest && knex seed:run"
  },
  "keywords": [
    "pathfinding",
    "navigation",
    "routing",
    "algorithms",
    "astar",
    "dijkstra",
    "maps",
    "geolocation",
    "optimization"
  ],
  "author": "King Defender",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/king-defender/pathfinder.git"
  },
  "bugs": {
    "url": "https://github.com/king-defender/pathfinder/issues"
  },
  "homepage": "https://github.com/king-defender/pathfinder#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.0.0",
    "express-rate-limit": "^6.8.1",
    "express-validator": "^7.0.1",
    "firebase-admin": "^11.10.1",
    "firebase": "^10.1.0",
    "redis": "^4.6.7",
    "winston": "^3.10.0",
    "dotenv": "^16.3.1",
    "jsonwebtoken": "^9.0.1",
    "bcryptjs": "^2.4.3",
    "multer": "^1.4.5-lts.1",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6"
  },
  "devDependencies": {
    "@babel/cli": "^7.22.9",
    "@babel/core": "^7.22.9",
    "@babel/preset-env": "^7.22.9",
    "@babel/preset-typescript": "^7.22.5",
    "@types/node": "^20.4.5",
    "@types/express": "^4.17.17",
    "@types/cors": "^2.8.13",
    "@types/multer": "^1.4.7",
    "@types/bcryptjs": "^2.4.2",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/compression": "^1.7.2",
    "@types/cookie-parser": "^1.4.3",
    "@typescript-eslint/eslint-plugin": "^6.2.0",
    "@typescript-eslint/parser": "^6.2.0",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^5.0.0",
    "prettier": "^3.0.0",
    "typescript": "^5.1.6",
    "jest": "^29.6.1",
    "@types/jest": "^29.5.3",
    "ts-jest": "^29.1.1",
    "supertest": "^6.3.3",
    "@types/supertest": "^2.0.12",
    "nodemon": "^3.0.1",
    "rimraf": "^5.0.1",
    "webpack": "^5.88.1",
    "webpack-cli": "^5.1.4",
    "html-webpack-plugin": "^5.5.3",
    "css-loader": "^6.8.1",
    "style-loader": "^3.3.3",
    "@playwright/test": "^1.36.2",
    "firebase-tools": "^12.4.7",
    "@firebase/rules-unit-testing": "^2.0.7"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/src", "<rootDir>/test"],
    "testMatch": ["**/__tests__/**/*.ts", "**/?(*.)+(spec|test).ts"],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/**/*.test.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": ["text", "lcov", "html"]
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended",
      "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint", "prettier"],
    "rules": {
      "prettier/prettier": "error",
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/explicit-function-return-type": "warn"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2
  }
}